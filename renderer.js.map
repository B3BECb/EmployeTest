{"version":3,"file":"renderer.js","sourceRoot":"","sources":["renderer.ts"],"names":[],"mappings":";;AAAA,qCAA+C;AAC/C,2CAAwC;AAExC,+CAA0C;AAC1C,2DAAwD;AAExD,IAAU,KAAK,CA8Dd;AA9DD,WAAU,KAAK;IAAC,IAAA,KAAK,CA8DpB;IA9De,WAAA,KAAK;QAEpB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAEzB,MAAM,IAAI;YAIT;gBAEC,IAAI,CAAC,OAAO,GAAG,IAAI,4BAAmB,CAAC,qBAAS,CAAC,MAAM,EAAE,qBAAS,CAAC,SAAS,CAAC,CAAC;YAC/E,CAAC;YAED,KAAK,CAAC,KAAK;gBAEV,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,qBAAqB,CAAC,CAAC;gBAC5D,IAAI,MAAM,GAAI,QAAQ,CAAC,aAAa,CAAC,oBAAoB,CAAC,CAAC;gBAC3D,IAAI,KAAK,GAAK,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,CAAC;gBAE1D,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC;gBAC3B,MAAM,CAAC,WAAW,GAAI,qBAAqB,CAAC;gBAE5C,IAAG,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,EACxC;oBACC,KAAK,CAAC,0CAA2C,qBAAS,CAAC,MAAO,aAAc,qBAAS,CAAC,SAAU,EAAE,CAAC,CAAC;oBACxG,MAAM,CAAC,WAAW,GAAG,4BAA4B,CAAC;iBAClD;gBAED,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;gBAC5B,MAAM,CAAC,WAAW,GAAI,0BAA0B,CAAC;gBAEjD,IACA;oBACC,IAAG,CAAC,MAAM,uBAAS,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,EACjD;wBACC,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC;wBAC5B,MAAM,CAAC,WAAW,GAAI,4BAA4B,CAAC;wBACnD,MAAM,uBAAS,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;qBAC5D;oBAED,OAAO,CAAC,WAAW,GAAG,MAAM,CAAC;oBAC7B,MAAM,CAAC,WAAW,GAAI,QAAQ,CAAC;oBAC/B,KAAK,CAAC,WAAW,GAAK,QAAQ,CAAC;iBAC/B;gBACD,OAAM,GAAG,EACT;oBACC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACnB;YACF,CAAC;SACD;QAED,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;QACtB,IAAI,aAAgC,CAAC;QAErC,IAAI,UAAU,GAAG,KAAK,IAAG,EAAE;YAE1B,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;YACnB,aAAa,GAAG,IAAI,qCAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpD,aAAa,CAAC,eAAe,EAAE,CAAC;QACjC,CAAC,CAAC;QAEF,UAAU,EAAE,CAAC;IACd,CAAC,EA9De,KAAK,GAAL,WAAK,KAAL,WAAK,QA8DpB;AAAD,CAAC,EA9DS,KAAK,KAAL,KAAK,QA8Dd","sourcesContent":["import { MongoContextFactory } from \"./schema\";\r\nimport { AppConsts } from \"./appConsts\";\r\n\r\nimport { DbCreator } from \"./mongoModule\";\r\nimport { WindowsController } from \"./WindowsController\";\r\n\r\nnamespace Pages.Index\r\n{\r\n\tconsole.log('mongo use');\r\n\r\n\tclass Main\r\n\t{\r\n\t\tFactory: MongoContextFactory;\r\n\r\n\t\tconstructor()\r\n\t\t{\r\n\t\t\tthis.Factory = new MongoContextFactory(AppConsts.dbName, AppConsts.mongoPort);\r\n\t\t}\r\n\r\n\t\tasync Start()\r\n\t\t{\r\n\t\t\tlet percent = document.querySelector('[data-id=\"percent\"]');\r\n\t\t\tlet status  = document.querySelector('[data-id=\"status\"]');\r\n\t\t\tlet state   = document.querySelector('[data-id=\"state\"]');\r\n\r\n\t\t\tpercent.textContent = \"0%\";\r\n\t\t\tstatus.textContent  = \"Подключение к БД...\";\r\n\r\n\t\t\tif(!await this.Factory.TryConnectAsync())\r\n\t\t\t{\r\n\t\t\t\talert(`Не удалось подключиться к локальной БД ${ AppConsts.dbName } по порту ${ AppConsts.mongoPort }`);\r\n\t\t\t\tstatus.textContent = \"Ошибка подключения к БД...\";\r\n\t\t\t}\r\n\r\n\t\t\tpercent.textContent = \"10%\";\r\n\t\t\tstatus.textContent  = \"Верификация данных БД...\";\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tif(!await DbCreator.IsDbInitialized(this.Factory))\r\n\t\t\t\t{\r\n\t\t\t\t\tpercent.textContent = \"11%\";\r\n\t\t\t\t\tstatus.textContent  = \"Инициализация данных БД...\";\r\n\t\t\t\t\tawait DbCreator.InitializeDb(this.Factory, percent, status);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpercent.textContent = \"100%\";\r\n\t\t\t\tstatus.textContent  = \"Готово\";\r\n\t\t\t\tstate.textContent   = \"Готово\";\r\n\t\t\t}\r\n\t\t\tcatch(exc)\r\n\t\t\t{\r\n\t\t\t\tconsole.error(exc);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tlet main = new Main();\r\n\tlet wndController: WindowsController;\r\n\r\n\tlet initialize = async() =>\r\n\t{\r\n\t\tawait main.Start();\r\n\t\twndController = new WindowsController(main.Factory);\r\n\t\twndController.ShowStartDialog();\r\n\t};\r\n\r\n\tinitialize();\r\n}"]}