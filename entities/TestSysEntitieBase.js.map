{"version":3,"file":"TestSysEntitieBase.js","sourceRoot":"","sources":["TestSysEntitieBase.ts"],"names":[],"mappings":";;AACA,qDAAkD;AAElD,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,MAAM,KAAK,GAAM,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;AAEvC,MAAM,kBACL,SAAQ,+BAAc;IAQtB,YAAY,IAAY,EACrB,GAAqB,EACrB,UAA4B,EAC5B,OAAe;QAEjB,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,GAAG,GAAO,GAAG,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAI,UAAU,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAM,IAAI,CAAC;IACrB,CAAC;IAEM,MAAM,CAAC,aAAa;QAE1B,OAAO;YACN,IAAI,EAAK,KAAK,CAAC,MAAM;YACrB,OAAO,EAAE,KAAK,CAAC,MAAM;YACrB,GAAG,EAAM,EAAE,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE;YAC7C,MAAM,EAAG,EAAE,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,KAAK,EAAE;SAC7C,CAAC;IACH,CAAC;IAEM,MAAM,CAAC,SAAS,CAAC,KAAyB;QAEhD,IAAI,WAAW,GAAG,IAAI,kBAAkB,CAAC,KAAK,CAAC,IAAI,EAClD,KAAK,CAAC,GAAG,EACT,KAAK,CAAC,MAAM,EACZ,KAAK,CAAC,OAAO,CAAC,CAAC;QAChB,WAAW,CAAC,EAAE,GAAK,KAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;QAChD,OAAO,WAAW,CAAC;IACpB,CAAC;IAEM,SAAS;QAEf,OAAO;YACN,GAAG,EAAM,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;YAC7C,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;YAChD,IAAI,EAAK,IAAI,CAAC,IAAI;SAClB,CAAC;IACH,CAAC;CACD;AAEQ,gDAAkB","sourcesContent":["import { RatedEntitieBase } from \"./RatedEntitieBase\";\nimport { TestSysDbEntry } from \"./TestSysDbEntry\";\n\nconst mongoose = require('mongoose');\nconst Types    = mongoose.Schema.Types;\n\nclass TestSysEntitieBase\n\textends TestSysDbEntry\n{\n\tpublic Id: string;\n\tpublic Name: string;\n\tpublic Age: RatedEntitieBase;\n\tpublic Family: RatedEntitieBase;\n\tpublic Comment: string;\n\n\tconstructor(name: string,\n\t\t\t\tage: RatedEntitieBase,\n\t\t\t\tfamilyType: RatedEntitieBase,\n\t\t\t\tcomment: string)\n\t{\n\t\tsuper();\n\n\t\tthis.Age     = age;\n\t\tthis.Comment = comment;\n\t\tthis.Family  = familyType;\n\t\tthis.Name    = name;\n\t}\n\n\tpublic static GetSchemaInfo(): any\n\t{\n\t\treturn {\n\t\t\tName:    Types.String,\n\t\t\tComment: Types.String,\n\t\t\tAge:     { type: Types.ObjectId, ref: \"age\" },\n\t\t\tFamily:  { type: Types.ObjectId, ref: \"fam\" },\n\t\t};\n\t}\n\n\tpublic static Represent(entry: TestSysEntitieBase): TestSysEntitieBase\n\t{\n\t\tlet represented = new TestSysEntitieBase(entry.Name,\n\t\t\tentry.Age,\n\t\t\tentry.Family,\n\t\t\tentry.Comment);\n\t\trepresented.Id  = (entry as any)._id.toString();\n\t\treturn represented;\n\t}\n\n\tpublic ToDbEntry(): any\n\t{\n\t\treturn {\n\t\t\tAge:     mongoose.Types.ObjectId(this.Age.Id),\n\t\t\tComment: this.Comment,\n\t\t\tFamily:  mongoose.Types.ObjectId(this.Family.Id),\n\t\t\tName:    this.Name,\n\t\t};\n\t}\n}\n\nexport { TestSysEntitieBase };"]}