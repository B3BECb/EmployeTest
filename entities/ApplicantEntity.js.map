{"version":3,"file":"ApplicantEntity.js","sourceRoot":"","sources":["ApplicantEntity.ts"],"names":[],"mappings":"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","sourcesContent":["import { TestSysEntitieBase } from \"./TestSysEntitieBase\";\nimport { RatedEntitieBase } from \"./RatedEntitieBase\";\nimport { CommentableEntitieBase } from \"./CommentableEntitieBase\";\nimport { JobEntitie } from \"./JobEntitie\";\n\nconst mongoose = require('mongoose');\nconst Types    = mongoose.Schema.Types;\n\nclass ApplicantEntity\n\textends TestSysEntitieBase\n{\n\tpublic Studies: CommentableEntitieBase[];\n\tpublic Experiences: CommentableEntitieBase[];\n\tpublic Jobs: JobEntitie[];\n\tpublic Rate: number;\n\tpublic PsycoRate: number;\n\tpublic ProfRate: number;\n\tpublic BisnesRate: number;\n\n\tconstructor(name: string,\n\t\t\t\tage: RatedEntitieBase,\n\t\t\t\tstudies: CommentableEntitieBase[],\n\t\t\t\texperiences: CommentableEntitieBase[],\n\t\t\t\tfamilyType: RatedEntitieBase,\n\t\t\t\tcomment: string,\n\t\t\t\trate: number,\n\t\t\t\tpsycoRate: number,\n\t\t\t\tprofRate: number,\n\t\t\t\tbisnesRate: number)\n\t{\n\t\tsuper(name, age, familyType, comment);\n\n\t\tthis.Studies     = studies;\n\t\tthis.Experiences = experiences;\n\t\tthis.Rate        = rate;\n\t\tthis.PsycoRate   = psycoRate;\n\t\tthis.ProfRate    = profRate;\n\t\tthis.BisnesRate  = bisnesRate;\n\t}\n\n\tpublic static GetSchemaInfo(): any\n\t{\n\t\tlet base: any    = TestSysEntitieBase.GetSchemaInfo();\n\t\tbase.Studies     = [CommentableEntitieBase.GetSchemaInfo(\"stud\")];\n\t\tbase.Experiences = [CommentableEntitieBase.GetSchemaInfo(\"exp\")];\n\t\tbase.Jobs        = [{ type: Types.ObjectId, ref: \"job\" }];\n\t\tbase.Employment  = Types.String;\n\t\tbase.Rate        = Types.Number;\n\n\t\treturn base;\n\t}\n\n\tpublic static Represent(entry: ApplicantEntity): ApplicantEntity\n\t{\n\t\tlet base         = TestSysEntitieBase.Represent(entry) as ApplicantEntity;\n\t\tbase.Studies     = entry.Studies.map(x => CommentableEntitieBase.Represent(x));\n\t\tbase.Experiences = entry.Experiences.map(x => CommentableEntitieBase.Represent(x));\n\t\tbase.Jobs        = entry.Jobs.map(x => JobEntitie.Represent(x));\n\t\tbase.Rate        = entry.Rate;\n\t\treturn base;\n\t}\n\n\tpublic ToDbEntry(): any\n\t{\n\t\tlet base         = super.ToDbEntry();\n\t\tbase.Studies     = this.Studies.map(x => x.ToDbEntry());\n\t\tbase.Experiences = this.Experiences.map(x => x.ToDbEntry());\n\t\tbase.Jobs        = this.Jobs\n\t\t\t\t\t\t   ? this.Jobs.map(x => mongoose.Types.ObjectId(x.Id))\n\t\t\t\t\t\t   : [];\n\t\tbase.Rate        = this.Rate;\n\t\treturn base;\n\t}\n}\n\nexport { ApplicantEntity };"]}